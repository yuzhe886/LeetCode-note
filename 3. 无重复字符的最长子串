给定一个字符串，找出不含有重复字符的最长子串的长度。

示例：

给定 "abcabcbb" ，没有重复字符的最长子串是 "abc" ，那么长度就是3。

给定 "bbbbb" ，最长的子串就是 "b" ，长度是1。

给定 "pwwkew" ，最长子串是 "wke" ，长度是3。请注意答案必须是一个子串，"pwke" 是 子序列  而不是子串



class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        
        
        unordered_map<char,int> m;
        int left=0,res=0;
        for(int i=0;i<s.size();i++){
            left=max(left,m[s[i]]);
            m[s[i]]=i+1;
            res=max(res,i-left+1);         
        }
        return res;


    }
};

//使用unordered_map<char,int> m，可以定义而不赋值，巧妙的不用find方法直接查找替换，经典滑窗方法
